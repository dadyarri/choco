name: "Deploy Telegram Integration to production server"

on:
  push:
    branches:
      - "main"
    tags:
      - "tgi-v*"
  workflow_dispatch: {}
    
jobs:
  build:
    if: startsWith(github.ref, 'refs/tags/') && github.ref == 'refs/heads/main'
    name: "Build & push services"
    runs-on: "ubuntu-latest"
    environment: "Production"
    steps:
      - uses: actions/checkout@v2
        name: Use git history
      
      - name: Get version number
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/tgi-v}" >> $GITHUB_OUTPUT

      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push telegram integration
        uses: docker/build-push-action@v4
        with:
          context: "{{defaultContext}}:TelegramIntegration"
          push: true
          tags: "dadyarri/3e5cb8a404704303834451b5afeab0ad:${{ steps.vars.outputs.tag }}, dadyarri/3e5cb8a404704303834451b5afeab0ad:latest"

      - name: Install SSH
        run: sudo apt install openssh-client -y

      - name: Upload new version & restart application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          password: ${{ secrets.PRODUCTION_PASSWORD }}
          port: ${{ secrets.PRODUCTION_PORT }}
          script: |
            cd /code
            docker compose pull telegramIntegration
            docker compose stop telegramIntegration
            docker compose rm telegramIntegration
            docker compose up telegramIntegration -d
            docker compose logs
